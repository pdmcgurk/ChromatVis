/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void imgButton1_click1(GImageButton source, GEvent event) { //_CODE_:imgButton1:482438:
  openTrace();
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton1:482438:

/*public void resizeButton_click1(GImageButton source, GEvent event){
  print(event.toString() + "\n");
  if (event.toString() == "CLICKED") {
    //((TraceWinData)source.getPApplet().data).resizePanel.setVisible(true);
    print("This is the resize button");
  }
}*/

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  imgButton1 = new GImageButton(this, 4, 4, new String[] { "open-archive.png", "open-archive.png", "open-archive.png" } , "allblack.png");
  imgButton1.addEventHandler(this, "imgButton1_click1");
}

// Variable declarations 
// autogenerated do not edit
GImageButton imgButton1; 